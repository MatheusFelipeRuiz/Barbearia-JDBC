/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.barbeariacortes.view;

import br.com.barbeariacortes.dao.AgendaDAO;
import br.com.barbeariacortes.dao.FuncionarioDAO;
import br.com.barbeariacortes.dao.ServicosDAO;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author user
 */
public class TelaCadastroAgendamento extends javax.swing.JFrame implements Utilitarios {

    /**
     * Creates new form TelaCadastroAgendamento
     */
    public TelaCadastroAgendamento() {
        initComponents();
        setSize(700, 600);
        setTitle("Fazer Agendamento");
        setResizable(false); // Define que não pode aumentar o tamanho da tela
        preencherCadastro(this);
        inserirLogo("../src/br/com/barbeariacortes/view/img/icon-calendario.png", this);

        alinharTela(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backgroundOptions = new javax.swing.JPanel();
        jLabelServico = new javax.swing.JLabel();
        comboBoxServico = new javax.swing.JComboBox<>();
        jLabelFuncionario = new javax.swing.JLabel();
        comboBoxFuncionario = new javax.swing.JComboBox<>();
        jLabelPreco = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        jLabelData = new javax.swing.JLabel();
        txtData = new javax.swing.JFormattedTextField();
        jLabelHora = new javax.swing.JLabel();
        txtHora = new javax.swing.JFormattedTextField();
        btnAgendar = new javax.swing.JButton();
        background = new javax.swing.JLabel();
        jLabelIdCliente = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fazer Agendamento");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, -1));

        backgroundOptions.setBackground(new java.awt.Color(0, 0, 0));

        jLabelServico.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabelServico.setForeground(new java.awt.Color(255, 255, 255));
        jLabelServico.setText("Serviço");

        comboBoxServico.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxServicoItemStateChanged(evt);
            }
        });
        comboBoxServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxServicoActionPerformed(evt);
            }
        });

        jLabelFuncionario.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabelFuncionario.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFuncionario.setText("Funcionário");

        jLabelPreco.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabelPreco.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPreco.setText("Preço");

        txtPreco.setEditable(false);

        jLabelData.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabelData.setForeground(new java.awt.Color(255, 255, 255));
        jLabelData.setText("Data");

        try {
            txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabelHora.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabelHora.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHora.setText("Hora");

        try {
            txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnAgendar.setBackground(new java.awt.Color(255, 0, 0));
        btnAgendar.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        btnAgendar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgendar.setText("Agendar");
        btnAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundOptionsLayout = new javax.swing.GroupLayout(backgroundOptions);
        backgroundOptions.setLayout(backgroundOptionsLayout);
        backgroundOptionsLayout.setHorizontalGroup(
            backgroundOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundOptionsLayout.createSequentialGroup()
                .addGroup(backgroundOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundOptionsLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(backgroundOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelData)
                                .addComponent(jLabelPreco)
                                .addComponent(jLabelFuncionario)
                                .addComponent(jLabelServico)
                                .addComponent(comboBoxServico, 0, 230, Short.MAX_VALUE)
                                .addComponent(comboBoxFuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPreco)
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelHora)
                            .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(backgroundOptionsLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(btnAgendar)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        backgroundOptionsLayout.setVerticalGroup(
            backgroundOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundOptionsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabelServico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelFuncionario)
                .addGap(18, 18, 18)
                .addComponent(comboBoxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabelPreco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelHora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnAgendar)
                .addGap(30, 30, 30))
        );

        getContentPane().add(backgroundOptions, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 430, 480));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/barbeariacortes/view/img/background-cadastro.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        getContentPane().add(jLabelIdCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxServicoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxServicoItemStateChanged
        ServicosDAO servicoDAO = new ServicosDAO();
        servicoDAO.preencherPrecoServico(this);
    }//GEN-LAST:event_comboBoxServicoItemStateChanged

    private void btnAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendarActionPerformed
        String[] partesData = this.txtData.getText().replaceAll("/", "-").split("-");
        String data = partesData[2] + "-" + partesData[1] + "-" + partesData[0];
        if (!eDataValida(this.txtData.getText())) {
            JOptionPane.showMessageDialog(null, "Data inválida, por favor insira uma data válida");
        } else {

            String hora = this.txtHora.getText() + ":00";
            String funcionario = this.comboBoxFuncionario.getSelectedItem().toString();

            FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
            ServicosDAO servicoDAO = new ServicosDAO();
            int idFuncionario = funcionarioDAO.getIdFuncionario(funcionario);
            int idCliente = Integer.parseInt(this.getjLabelIdCliente().getText());
            int idServico = servicoDAO.getIdServico(this.getComboBoxServico().getSelectedItem().toString());
            float preco = servicoDAO.getPrecoServico(idServico);
            if (salvarDados(this, data, hora, idFuncionario, idCliente, idServico, preco)) {
                JOptionPane.showMessageDialog(null, "Agendamento concluído com sucesso");
                this.dispose();
            };
        }

    }//GEN-LAST:event_btnAgendarActionPerformed

    private void comboBoxServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxServicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxServicoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroAgendamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JPanel backgroundOptions;
    private javax.swing.JButton btnAgendar;
    private javax.swing.JComboBox<String> comboBoxFuncionario;
    private javax.swing.JComboBox<String> comboBoxServico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelFuncionario;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelIdCliente;
    private javax.swing.JLabel jLabelPreco;
    private javax.swing.JLabel jLabelServico;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextField txtPreco;
    // End of variables declaration//GEN-END:variables

    private boolean eDataValida(String data) {
        try {
            LocalDate dataAtual = LocalDate.now(); // Pega a data Atual
            DateTimeFormatter padrao = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate novaData = LocalDate.parse(data, padrao);
            if (novaData.isBefore(dataAtual)) {
                return false;
            } else {
                return true;
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return false;
    }

    private boolean salvarDados(TelaCadastroAgendamento tela, String data, String hora, int funcionario,
            int cliente, int servico, float preco) {
        AgendaDAO agendaDAO = new AgendaDAO();
        if (agendaDAO.validarAgendamento(data, hora, funcionario, cliente, servico, preco)) {
            return true;
        };
        return false;
    }

    private void preencherCadastro(TelaCadastroAgendamento tela) {
        ServicosDAO servicoDAO = new ServicosDAO();
        FuncionarioDAO funcionarioDAO = new FuncionarioDAO();

        servicoDAO.preencherComboBoxServico(tela);
        funcionarioDAO.preencherComboBoxFuncionario(tela);
        servicoDAO.preencherPrecoServico(tela);
    }

    public JComboBox<String> getComboBoxServico() {
        return comboBoxServico;
    }

    public void setComboBoxServico(JComboBox<String> comboBoxServico) {
        this.comboBoxServico = comboBoxServico;
    }

    public JComboBox<String> getComboBoxFuncionario() {
        return comboBoxFuncionario;
    }

    public void setComboBoxFuncionario(JComboBox<String> comboBoxFuncionario) {
        this.comboBoxFuncionario = comboBoxFuncionario;
    }

    public JTextField getTxtPreco() {
        return txtPreco;
    }

    public void setTxtPreco(JTextField txtPreco) {
        this.txtPreco = txtPreco;
    }

    public JLabel getjLabelIdCliente() {
        return jLabelIdCliente;
    }

    public void setjLabelIdCliente(JLabel jLabelIdCliente) {
        this.jLabelIdCliente = jLabelIdCliente;
    }

    @Override
    public void inserirLogo(String pathLogo, JFrame tela) {
        tela.setIconImage(Toolkit.getDefaultToolkit().getImage(pathLogo));
    }

    @Override
    public void alinharTela(JFrame jframe) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int screenWidth = screenSize.width;
        int screenHeight = screenSize.height;

        int frameWidth = jframe.getWidth();
        int frameHeight = jframe.getHeight();
        int x = (screenWidth - frameWidth) / 2;
        int y = (screenHeight - frameHeight) / 2;

        jframe.setLocation(x, y);
    }

}
